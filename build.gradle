plugins {
    id 'fabric-loom' version '1.11-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "munchmap11r" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

fabricApi {
    configureDataGeneration {
        client = true
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.essential.gg/repository/maven-public" }
    maven {    name = "Terraformers"
        url = "https://maven.terraformersmc.com/"}
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Mod Menu for testing (not included in final jar)
    modLocalRuntime("com.terraformersmc:modmenu:16.0.0-rc.1")

    // Kotlin standard library (required for Vigilance)
    modImplementation("org.jetbrains.kotlin:kotlin-stdlib:1.9.0")
    modImplementation("org.jetbrains.kotlin:kotlin-reflect:1.9.0")

    // Elementa and UniversalCraft (platform-agnostic versions)
    // Using 1.21.9 version as 1.21.10 is not yet available
    modImplementation("gg.essential:elementa:710")
    modImplementation("gg.essential:universalcraft-1.21.9-fabric:436")
    modImplementation("gg.essential:vigilance:312")

    // Include in jar
    include("org.jetbrains.kotlin:kotlin-stdlib:1.9.0")
    include("org.jetbrains.kotlin:kotlin-reflect:1.9.0")
    include("gg.essential:elementa:710")
    include("gg.essential:vigilance:312")
    include("gg.essential:universalcraft-1.21.9-fabric:436")
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    repositories {
        // Add repositories to publish to here.
    }
}